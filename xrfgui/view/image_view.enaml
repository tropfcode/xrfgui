from enaml.widgets.api import (Container, PushButton, Label, Slider, GroupBox,
                               Form, Field, FileDialogEx, DockItem,
                               DockArea, CheckBox, ComboBox, RadioButton,
                               ScrollArea, Window, GroupBox, MultilineField, MPLCanvas)
from enaml.layout.api import hbox, vbox, HSplitLayout, VSplitLayout, spacer, grid
from enaml.core.api import Include, Looper
from enaml.layout.geometry import Box
from enaml.stdlib.fields import FloatField
from enaml.stdlib.fields import IntField as DefaultIntField
import os
import numpy as np
from model.plotmodel import PlotModel

enamldef Image(DockItem): image_view:
    attr plot
    
    # Passed in, DataListModel class from datamodel.py
    attr data_list
    Container:   
        constraints = [
            vbox(
                canvas,
                hbox(augment_box),
                slider
            )
        ]
        MPLCanvas: canvas:
            toolbar_visible = True
            figure << plot.fig
            
        GroupBox: augment_box:
            title = 'Image Augmentation'
            Container:
                constraints = [
                    hbox(norm_check, align_check, make_norm_check, make_align_check)
                ]
                    
                CheckBox: norm_check:
                    text = 'Normalize'
                    clicked ::
                        if checked:
                            print('norm box checked')
                        else:
                            print('norm box not checked')
                            
                CheckBox: align_check:
                    text = 'Align'
                    clicked ::
                        if checked:
                            print('norm box checked')
                        else:
                            print('norm box not checked')
                        
                CheckBox: make_norm_check:
                    text = 'Make Norm Data'
                    clicked ::
                        if image_view.data_list.length == 0:
                            print('Must plot data first')
                            self.checked = False
                        elif checked:
                            array = data_list.get_data(slider.value-1).plot_data
                            for data in image_view.data_list.data_list:
                                data.add_norm_data(array=array)
                                data.normed = True
                            data_list.get_data(slider.value-1).is_norm = True
                        else:
                            array = data_list.get_data(slider.value-1).plot_data
                            for data in image_view.data_list.data_list:
                                data.normed = False
                            array.is_norm = True
                            
                CheckBox: make_align_check:
                    text = 'Make Align Data'
                    clicked ::
                        if checked:
                            print('norm box checked')
                        else:
                            print('norm box not checked')
                        
                    
        Slider: slider:
            constraints = [width == canvas.width]
            tracking = True
            minimum << 0 if data_list.length == 0 else 1
            maximum := data_list.length
            maximum ::
                if maximum == 0:
                    pass
            value ::
                plot.plot(data_list.get_data(value-1).plot_data)
           